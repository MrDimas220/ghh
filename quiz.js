const questions = [
  {
    question: "–Ø–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ —î –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à–æ—é (ü•á)?",
    image: "https://blog.whitebit.com/wp-content/uploads/2021/09/coins-btc.png" ,
    answers: [
      { text: "Ethereum", correct: false },
      { text: "Bitcoin", correct: true },
      { text: "Dogecoin", correct: false },
      { text: "Cardano", correct: false }
    ]
  },
  {
    question: "–•—Ç–æ —î —Ç–≤–æ—Ä—Ü–µ–º Bitcoin?",
    image: "https://upload.wikimedia.org/wikipedia/commons/4/4e/Satoshi_Nakamoto.jpg",
    answers: [
      { text: "Vitalik Buterin", correct: false },
      { text: "Satoshi Nakamoto", correct: true },
      { text: "Changpeng Zhao", correct: false },
      { text: "Elon Musk", correct: false }
    ]
  },
  {
    question: "–©–æ —Ç–∞–∫–µ Altcoin?",
    image: "",
    answers: [
      { text: "–ë—É–¥—å-—è–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞, –∫—Ä—ñ–º Bitcoin", correct: true },
      { text: "–°—Ç–µ–π–±–ª–∫–æ—ó–Ω", correct: false },
      { text: "–ü—Ä–æ–≥—Ä–∞–º–∞ –¥–ª—è —Ç—Ä–µ–π–¥–∏–Ω–≥—É", correct: false },
      { text: "–ö—Ä–∏–ø—Ç–æ-–≥–∞–º–∞–Ω–µ—Ü—å", correct: false }
    ]
  },
  {
    question: "–©–æ —Ç–∞–∫–µ FOMO?",
    image: "",
    answers: [
      { text: "–°—Ç—Ä–∞—Ö –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å", correct: true },
      { text: "–ö–æ–º—ñ—Å—ñ—è –∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é", correct: false },
      { text: "–ù–æ–≤–∏–π –∞–ª—å—Ç–∫–æ—ó–Ω", correct: false },
      { text: "–í–∏–¥ –º–∞–π–Ω—ñ–Ω–≥—É", correct: false }
    ]
  },
  {
    question: "–Ø–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ —î –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ—é –¥–ª—è —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ñ–≤?",
    image: "https://stormgain.com/sites/default/files/2024-03/ethereum-price-predction-main.jpg",
    answers: [
      { text: "Bitcoin", correct: false },
      { text: "Solana", correct: false },
      { text: "Ethereum", correct: true },
      { text: "Tether", correct: false }
    ]
  },
  {
    question: "–•—Ç–æ –∑–∞—Å–Ω—É–≤–∞–≤ –±—ñ—Ä–∂—É Binance?",
    image: "https://upload.wikimedia.org/wikipedia/commons/2/26/CZ_Binance_2019.jpg",
    answers: [
      { text: "Michael Saylor", correct: false },
      { text: "Changpeng Zhao", correct: true },
      { text: "Charles Hoskinson", correct: false },
      { text: "Gavin Wood", correct: false }
    ]
  },
  {
    question: "–©–æ –æ–∑–Ω–∞—á–∞—î Tokenomics?",
    image: "",
    answers: [
      { text: "–¢–µ—Ö–Ω—ñ—á–Ω–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π", correct: false },
      { text: "–ú–∞–π–Ω—ñ–Ω–≥ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç", correct: false },
      { text: "–ï–∫–æ–Ω–æ–º—ñ–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∞–±–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏", correct: true },
      { text: "–°—Ç–æ—Ä—ñ–Ω–∫–∞ –Ω–æ–≤–∏–Ω –ø—Ä–æ –∫—Ä–∏–ø—Ç—É", correct: false }
    ]
  },
  {
    question: "–•—Ç–æ –≤–ø–ª–∏–≤–∞—î –Ω–∞ —Ä–∏–Ω–æ–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç —á–µ—Ä–µ–∑ —Å–≤–æ—ó –ø—É–±–ª—ñ—á–Ω—ñ –∑–∞—è–≤–∏ —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫—É Dogecoin?",
    image: "https://upload.wikimedia.org/wikipedia/commons/e/ed/Elon_Musk_Royal_Society_%28crop2%29.jpg",
    answers: [
      { text: "Brian Armstrong", correct: false },
      { text: "Elon Musk", correct: true },
      { text: "Vitalik Buterin", correct: false },
      { text: "Satoshi Nakamoto", correct: false }
    ]
  },
  {
    question: "–Ø–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ –≤—ñ–¥–æ–º–∞ —è–∫ —Å—Ç–∞–±—ñ–ª—å–Ω–∞ –º–æ–Ω–µ—Ç–∞ (Stablecoin)?",
    image: "https://cryptonews.com/news/images/stories/usdt-1.jpg",
    answers: [
      { text: "Tether (USDT)", correct: true },
      { text: "Bitcoin", correct: false },
      { text: "Dogecoin", correct: false },
      { text: "Ethereum", correct: false }
    ]
  },
  {
    question: "–Ø–∫–∏–π Altcoin –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∏ —Ç–∞ –º–∞—Å—à—Ç–∞–±–æ–≤–∞–Ω—ñ—Å—Ç—å —á–µ—Ä–µ–∑ Cardano?",
    image: "https://cryptoslate.com/wp-content/uploads/2021/02/cardano-ada.jpg",
    answers: [
      { text: "Cardano (ADA)", correct: true },
      { text: "Polkadot (DOT)", correct: false },
      { text: "Solana (SOL)", correct: false },
      { text: "BNB (Binance Coin)", correct: false }
    ]
  }
];

let currentQuestionIndex = 0;
let score = 0;

const body = document.body;
const quizBox = document.getElementById('quiz-box');
const resultBox = document.getElementById('result-box');
const questionText = document.getElementById('question-text');
const questionImage = document.getElementById('question-image');
const answerButtons = document.getElementById('answer-buttons');
const nextButton = document.getElementById('next-button');
const restartButton = document.getElementById('restart-button');
const scoreText = document.getElementById('score-text');
const progressBar = document.getElementById('progress-bar');
const themeToggleButton = document.getElementById('theme-toggle');

function updateProgressBar() {
  const progress = (currentQuestionIndex / questions.length) * 100;
  progressBar.style.width = `${progress}%`;
}

function showQuestion() {
  resetState();
  updateProgressBar();

  const currentQuestion = questions[currentQuestionIndex];
  questionText.innerText = currentQuestion.question;

  if(currentQuestion.image){
    questionImage.src = currentQuestion.image;
    questionImage.style.display = 'block';
  } else {
    questionImage.style.display = 'none';
  }

  currentQuestion.answers.forEach(answer => {
    const button = document.createElement('button');
    button.innerText = answer.text;
    button.classList.add('answer-btn');
    if(answer.correct) button.dataset.correct = answer.correct;
    button.addEventListener('click', selectAnswer);
    answerButtons.appendChild(button);
  });
}

function resetState(){
  nextButton.disabled = true;
  while(answerButtons.firstChild){
    answerButtons.removeChild(answerButtons.firstChild);
  }
}

function selectAnswer(e){
  const selectedButton = e.target;
  const isCorrect = selectedButton.dataset.correct === "true";

  if(isCorrect){
    selectedButton.classList.add('correct');
    score++;
  } else {
    selectedButton.classList.add('incorrect');
  }

  Array.from(answerButtons.children).forEach(button => {
    if(button.dataset.correct === "true") button.classList.add('correct');
    button.disabled = true;
  });

  nextButton.disabled = false;
}

function handleNextButton(){
  currentQuestionIndex++;
  if(currentQuestionIndex < questions.length){
    showQuestion();
  } else {
    showResult();
  }
}

function showResult(){
  updateProgressBar();
  quizBox.style.display = 'none';
  resultBox.style.display = 'block';
  scoreText.innerHTML = `–í–∏ –≤—ñ–¥–ø–æ–≤—ñ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ <strong>${score}</strong> –∑ <strong>${questions.length}</strong> –ø–∏—Ç–∞–Ω—å! üéâ`;
}

function startQuiz(){
  currentQuestionIndex = 0;
  score = 0;
  resultBox.style.display = 'none';
  quizBox.style.display = 'block';
  showQuestion();
}

function toggleTheme(){
  if(body.classList.contains('light-theme')){
    body.classList.remove('light-theme');
    body.classList.add('dark-theme');
    themeToggleButton.innerText = "üí° Light Mode";
  } else {
    body.classList.remove('dark-theme');
    body.classList.add('light-theme');
    themeToggleButton.innerText = "üåô Dark Mode";
  }
}

nextButton.addEventListener('click', handleNextButton);
restartButton.addEventListener('click', startQuiz);
themeToggleButton.addEventListener('click', toggleTheme);


startQuiz();


























// --- –§—É–Ω–∫—Ü—ñ—ó –ª–æ–≥—ñ–∫–∏ –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∏ ---


function updateProgressBar() {
    const progress = ((currentQuestionIndex) / questions.length) * 100;
    progressBar.style.width = `${progress}%`;
}


function showQuestion() {
    resetState();
    updateProgressBar(); // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É


    const currentQuestion = questions[currentQuestionIndex];
   
    questionText.innerText = currentQuestion.question;


    // –î–æ–¥–∞–≤–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (–§–æ—Ç–æ –º—É–∑–∏–∫–∞–Ω—Ç–∞/–≥—É—Ä—Ç—É)
    if (currentQuestion.image) {
        questionImage.src = currentQuestion.image;
        questionImage.style.display = 'block';
    } else {
        questionImage.style.display = 'none';
        questionImage.src = '';
    }


    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
    currentQuestion.answers.forEach(answer => {
        const button = document.createElement('button');
        button.innerText = answer.text;
        button.classList.add('btn', 'answer-btn');
        if (answer.correct) {
            button.dataset.correct = answer.correct;
        }
        button.addEventListener('click', selectAnswer);
        answerButtons.appendChild(button);
    });
}


function resetState() {
    nextButton.disabled = true;
    while (answerButtons.firstChild) {
        answerButtons.removeChild(answerButtons.firstChild);
    }
}


function selectAnswer(e) {
    const selectedButton = e.target;
    const isCorrect = selectedButton.dataset.correct === "true";


    if (isCorrect) {
        selectedButton.classList.add('correct');
        score++;
    } else {
        selectedButton.classList.add('incorrect');
    }


    // –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –∫–Ω–æ–ø–æ–∫ —ñ –ø—ñ–¥—Å–≤—ñ—Ç–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó
    Array.from(answerButtons.children).forEach(button => {
        if (button.dataset.correct === "true") {
            button.classList.add('correct');
        }
        button.disabled = true;
    });


    nextButton.disabled = false;
}


function handleNextButton() {
    currentQuestionIndex++;
    if (currentQuestionIndex < questions.length) {
        showQuestion();
    } else {
        showResult();
    }
}


function showResult() {
    updateProgressBar(); // –§—ñ–Ω–∞–ª—å–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä—É –¥–æ 100%
    quizBox.style.display = 'none';
    resultBox.style.display = 'block';
    scoreText.innerHTML = `–í–∏ –≤–≥–∞–¥–∞–ª–∏ **${score}** –∑ **${questions.length}** –º—É–∑–∏–∫–∞–Ω—Ç—ñ–≤! <br> –¶–µ —á—É–¥–æ–≤–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!`;
}


function startQuiz() {
    currentQuestionIndex = 0;
    score = 0;
    resultBox.style.display = 'none';
    quizBox.style.display = 'block';
    showQuestion();
}


// --- –§—É–Ω–∫—Ü—ñ—è –∑–º—ñ–Ω–∏ —Ç–µ–º–∏ ---


function toggleTheme() {
    if (body.classList.contains('light-theme')) {
        body.classList.remove('light-theme');
        body.classList.add('dark-theme');
        themeToggleButton.innerText = "üí° Light Mode";
    } else {
        body.classList.remove('dark-theme');
        body.classList.add('light-theme');
        themeToggleButton.innerText = "üåô Dark Mode";
    }
}


// --- –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π ---


nextButton.addEventListener('click', handleNextButton);
restartButton.addEventListener('click', startQuiz);
themeToggleButton.addEventListener('click', toggleTheme);


// –ü–æ—á–∞—Ç–∫–æ–≤–∏–π –∑–∞–ø—É—Å–∫
startQuiz();
